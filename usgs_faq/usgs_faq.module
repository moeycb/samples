<?php

/**
 * The FAQ Admin UI module provides content managers with simplified node
 * edit forms when adding/editing FAQ content types.
 *
 * In addition, it provides several pages that will serve as a dashboard for
 * content managers to manage their content that they own.
 *
 * The module will define default views to begin with; however, we may need to
 * hard code it similar to the way the node module does it for content.
 */
/* @TODO -- change content types to look for product term!!
 *
 */

/**
 *
 * Implement hook_ctools_plugin_directory().
 *
 * @param $module
 * @param $plugin
 * @return string
 */
function usgs_faq_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && $plugin == 'content_types') {
    return "plugins/" . $plugin;
  }
}


/**
 * The usgs_faq_node_presave implements hook_node_save to add the moderation
 * state to FAQ nodes.
 * 
 * @param type $node
 */
function usgs_faq_node_presave_f($node) {
    /* TID 10149 moderation state is 'Published' */
    $menu_item = menu_get_item();
    $usgs_content_type = false;

    $faq_tid = variable_get('usgs_product_faq', _usgs_connect_get_faq());
    if (!empty($node->field_usgs_tags)) {
        $tid = $node->field_usgs_tags['und']['0']['tid'];
        $term = $tid ? taxonomy_term_load($tid) : false;
        $usgs_content_type = $term ? strtolower($term->name) : false;
    }

    if ($usgs_content_type == 'faq') {
        $faq_content_type = !empty($node->field_faq_type['und'][0]['value']) ?
                $node->field_faq_type['und'][0]['value'] : false;

        if (($faq_content_type == 'spotlight') || ($faq_content_type == 'faq_content')) {
            $moderation_state = !empty($node->field_moderation_state['und'][0]['value']) ? $node->field_moderation_state['und'][0]['value'] : false;
            $node->status = $moderation_state ? 1 : 1;

            if ($faq_content_type == 'faq_content') {
                $title = preg_replace("/(.{240,}?\b).*/s", '\1', strip_tags($node->field_question['und'][0]['value']));
                $ellipsis = (strlen($node->field_question['und'][0]['value']) > 240) ? ' ...' : false;
                $node->title = ($title > 240) ? substr($title, 0, 240) . $ellipsis : $title . $ellipsis;
            }
        }
    }
}

/**
 * The usgs_faq_theme_registry_alter function mplements hook_theme_registry to
 * add additional process functions to the breadcrumb theme.
 * 
 * @param array $registry
 */
function usgs_faq_theme_registry_alter(&$registry) {
    $process = $registry['breadcrumb']['process functions'];
    $new_process = array();
    foreach ($process AS $key => $function) {
        if ($function !== 'usgs_faq_process_breadcrumb') {
            $new_process[] = $function;
        }
    }
    $new_process[] = 'usgs_faq_process_breadcrumb';
    $registry['breadcrumb']['process functions'] = $new_process;
}

/**
 * Implements hook_menu_breadcrumb_alter to modify the breadcrumb for 
 * FAQ panel pages
 * 
 * @param type $active_trail
 * @param type $item
 */
function usgs_faq_menu_breadcrumb_alter(&$active_trail, &$item) {
    if ($item['path'] == 'frequently-asked-questions/%/category/%') {

        $active_trail = (array(
            array('title' => t('Home'), 'href' => null, 'localized_options' => array()),
            array('title' => t('Frequently Asked Questions'), 'href' => '/frequently-asked-questions', 'localized_options' => array()),
            array('title' => $item['page_arguments'][1]->title, 'href' => '/frequently-asked-questions' . '/' . $item['page_arguments'][1]->original_argument, 'localized_options' => array()),
            array('title' => $item['page_arguments'][2]->data->name,
                'href' => '/frequently-asked-questions' . '/'
                . $item['page_arguments'][1]->original_argument
                . '/category/'
                . $item['page_arguments'][2]->original_argument, 'localized_options' => array()
            ),
        ));
    }
    if ($item['path'] == 'frequently-asked-questions/%/tag/%') {
        $active_trail = (array(
            array('title' => t('Home'), 'href' => null, 'localized_options' => array()),
            array('title' => t('Frequently Asked Questions'), 'href' => '/frequently-asked-questions', 'localized_options' => array()),
            array('title' => $item['page_arguments'][1]->title, 'href' => '/frequently-asked-questions' . '/' . $item['page_arguments'][1]->original_argument, 'localized_options' => array()),
            array('title' => $item['page_arguments'][2]->data->name,
                'href' => '/frequently-asked-questions' . '/'
                . $item['page_arguments'][1]->original_argument
                . '/tag/'
                . $item['page_arguments'][2]->original_argument, 'localized_options' => array()
            ),
        ));
    }
}

/**
 * The usgs_faq_process_breadcrumb is an additional process function to add
 * the category or tag name to the breadcrumb on FAQ panel pages.
 * 
 * @param type $variables
 */
function usgs_faq_process_breadcrumb(&$variables) {

    $breadcrumb = &$variables['breadcrumb'];
    $item = menu_get_item();

    if ($item['path'] == 'frequently-asked-questions/%/category/%' || $item['path'] == 'frequently-asked-questions/%/tag/%') {

        // pop the last element
        $last = array_pop($breadcrumb);
        $last['data'] = strip_tags(array_pop($breadcrumb));
        array_push($breadcrumb, $last);
    }
}

/**
 * The usgs_faq_node_view implements hook_node_view to set the breadcrumb on
 * FAQ content panel pages.
 * 
 * @param type $node
 * @param type $view_mode
 * @param type $langcode
 */
function usgs_faq_node_view($node, $view_mode, $langcode) {

    if ($node->type == 'faq_content' && $view_mode == 'full') {
        $topic = field_get_items('node', $node, 'field_topics');

        $topic_name = !empty($topic[0]['taxonomy_term']->name) ? $topic[0]['taxonomy_term']->name : false;

        $breadcrumb[] = l('Home', '<front>');
        $breadcrumb[] = l(t('Frequently Asked Questions'), '/frequently-asked-questions');
        if ($topic_name) {
            $link = '/frequently-asked-questions/' . theme('usgs_machine_name_string', array('string' => $topic_name));
            $breadcrumb[] = l($topic_name, $link);
        }

        drupal_set_breadcrumb($breadcrumb);
    }
}

/**
 * 
 */
function _usgs_faq_form_fields() {
    $weight = -6;
    return array(
        'field_faq_type' => array(
            '#weight' => $weight++,
            '#required' => TRUE,
            '#value' => 'faq_content',
        ),
        'title' => array(
            '#weight' => $weight++,
//            '#states' => array(
//                'visible' => array(
//                    ':input[name="field_faq_type[und]"]' => array('value' => 'spotlight'),
//                ),
//                'invisible' => array(
//                    ':input[name="field_faq_type[und]"]' => array('!value' => 'spotlight'),
//                ),
//                'required' => array(
//                    ':input[name="field_faq_type[und]"]' => array('value' => 'spotlight'),
//                ),
//            ),
        ),
        'field_images' => array(
            '#weight' => $weight++,
        ),
        'field_question' => array(
            '#weight' => $weight++,
            '#states' => array(
                'visible' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
                'invisible' => array(
                    ':input[name="field_faq_type[und]"]' => array('!value' => 'faq_content'),
                ),
                'required' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
            ),
        ),
        'body' => array(
            'und' => array(array('#title' => 'Answer')),
            '#weight' => $weight++,
            '#states' => array(
                'visible' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
                'invisible' => array(
                    ':input[name="field_faq_type[und]"]' => array('!value' => 'faq_content'),
                ),
                'required' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
            ),
        ),
        'field_caption' => array(
            '#weight' => $weight++,
            '#states' => array(
                'visible' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'spotlight'),
                ),
                'invisible' => array(
                    ':input[name="field_faq_type[und]"]' => array('!value' => 'spotlight'),
                ),
                'required' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'spotlight'),
                ),
            ),
        ),
        'field_moderation_state' => array(
            '#weight' => $weight++,
        ),
        'field_author_email' => array(
            '#weight' => $weight++,
            '#states' => array(
                'visible' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
                'invisible' => array(
                    ':input[name="field_faq_type[und]"]' => array('!value' => 'faq_content'),
                ),
                'required' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
            ),
        ),
        'field_source_url' => array(
            '#weight' => $weight++,
            '#states' => array(
                'visible' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
                'invisible' => array(
                    ':input[name="field_faq_type[und]"]' => array('!value' => 'faq_content'),
                ),
            ),
        ),
        'field_links' => array(
            '#weight' => $weight++,
            '#states' => array(
                'visible' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
                'invisible' => array(
                    ':input[name="field_faq_type[und]"]' => array('!value' => 'faq_content'),
                ),
            ),
        ),
        'field_call_to_action' => array(
            '#weight' => $weight++,
        ),
        'field_popular' => array(
            '#weight' => $weight++,
        ),
        'field_topics' => array(
            '#weight' => $weight++,
            '#states' => array(
                'visible' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
                'invisible' => array(
                    ':input[name="field_faq_type[und]"]' => array('!value' => 'faq_content'),
                ),
                'required' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
            ),
        ),
        'field_faq_category' => array(
            '#weight' => $weight++,
            '#states' => array(
                'visible' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
                'invisible' => array(
                    ':input[name="field_faq_type[und]"]' => array('!value' => 'faq_content'),
                ),
                'required' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
            ),
        ),
        'field_faq_tags' => array(
            '#weight' => $weight++,
            '#states' => array(
                'visible' => array(
                    ':input[name="field_faq_type[und]"]' => array('value' => 'faq_content'),
                ),
                'invisible' => array(
                    ':input[name="field_faq_type[und]"]' => array('!value' => 'faq_content'),
                ),
            ),
        ),
        'field_usgs_tags' => array(
            '#weight' => $weight++,
        ),
        'field_usgs_free_tags' => array(
            '#weight' => $weight++,
        ),
    );
}

/**
 * 
 */
function _usgs_faq_custom_fields() {

    return array(
        'field_faq_type',
        'field_question',
        'field_caption',
        'field_moderation_state',
        'field_author_email',
        'field_links',
        'field_source_url',
        'field_call_to_action',
        'field_topics',
        'field_faq_category',
        'field_faq_tags',
        'field_popular',
    );
}

/**
 * Implements hook_form_alter for faq content
 */
function usgs_faq_form_alter(&$form, &$form_state, $form_id) {

    if ($form_id == 'usgs_node_node_form') {
//        $menu_item = menu_get_item();
//        $usgs_content_type = !empty($menu_item['page_arguments'][2]) ? $menu_item['page_arguments'][2] : false;
//        $faq_fields = _usgs_faq_form_fields();
//        $faq_custom_fields = _usgs_faq_custom_fields();
        $usgs_content_type = false;
        $menu_item = menu_get_item();
        $faq_tid = variable_get('usgs_product_faq', _usgs_connect_get_faq());
        if ($menu_item['page_callback'] == 'node_add') {
            $usgs_content_type = !empty($menu_item['page_arguments'][2]) ? $menu_item['page_arguments'][2] : false;
        } else {
            $tid = !empty($form['#node']->field_usgs_tags) ? $form['#node']->field_usgs_tags['und']['0']['tid'] : false;
            $term = $tid ? taxonomy_term_load($tid) : false;
            $usgs_content_type = $term ? strtolower($term->name) : false;
        }

        $faq_fields = _usgs_faq_form_fields();
        $faq_custom_fields = _usgs_faq_custom_fields();
        if ($usgs_content_type != 'faq') {
            foreach ($faq_custom_fields AS $key) {
                $form[$key]['#access'] = false;
            }
        } else {
            foreach (array_keys($form) AS $key) {
                if (in_array($key, array_keys($faq_fields))) {
                    $form[$key] = array_replace_recursive($form[$key], $faq_fields[$key]);
                } else if (strpos($key, 'field_') === 0) {
                    $form[$key]['#access'] = false;
                    $form[$key]['#required'] = false;
                }
            }
        }
    }
}

function _usgs_connect_get_faq() {
    $faq = variable_get('usgs_product_connect');
    if (!$faq) {
        $vocabulary = taxonomy_vocabulary_machine_name_load('usgs_tags');
        $vid = $vocabulary ? $vocabulary->vid : false;
        $parent_array = taxonomy_get_term_by_name('Products', 'usgs_tags');
        $parent_tid = key($parent_array);
        $tree = taxonomy_get_tree($vid, $parent_tid, 1);
        foreach ($tree AS $key => $term) {
            if ($term->name = 'FAQ') {
                variable_set('usgs_product_faq', $key);
                return $key;
            }
        }
    }
}

/**
 * Implementation of hook_preprocess().
 */
function usgs_faq_preprocess_usgs_layout_1(&$vars) {
    module_load_include('inc', 'usgs_faq', 'plugins/content_types/usgs_faq_tab');

    $view = usgs_faq_tab_render(NULL, NULL, NULL, NULL);
    $vars['faq'] = $view->content;
}