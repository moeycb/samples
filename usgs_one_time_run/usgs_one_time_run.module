<?php
/**
 * Created by PhpStorm.
 * User: pnguyen
 * Date: 7/8/15
 * Time: 3:54 PM
 */

function usgs_one_time_run_menu(){

  $pages = ['hubpage','maps','dt','science','software','news'];

  $items = [];

  foreach($pages as $page){
    $items['run-me-once/' . $page] = [
      'title'=> 'Convert ' . $page,
      'page callback' => "convert_{$page}_to_usgsnode",
      'access callback' => TRUE,
    ];
  }

  foreach($pages as $page){
    $items['run-me-again/' . $page] = [
      'title'=> 'Import ' . $page,
      'page callback' => "import_{$page}_to_usgsnode",
      'access callback' => TRUE,
    ];
  }

  $items['admin/config/one-time-run-config'] = array(
    'title' => 'USGS One Time Run',
    'description' => 'Because twice or more will break the core',
    'page callback' => 'system_admin_menu_block_page',
    'page arguments' => array('administer site configuration'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/config/one-time-run-config/nodes'] = array(
    'title' => 'Strip Node Tags',
    'description' => 'Strip Node Tags',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('usgs_strip_node_tags_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/one-time-run-config/news'] = array(
    'title' => 'Add Some News',
    'description' => 'Add Some News',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('usgs_add_some_news_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function usgs_add_some_news_form(){
  $form['submit'] = [
    '#type' => 'submit',
    '#value' => 'Lets Do This',
  ];

  return $form;
}

function usgs_add_some_news_form_submit($form, &$form_state){
  set_time_limit(0);

  $files = file_scan_directory(drupal_get_path('module','usgs_one_time_run') . '/json/news-articles', '/\.json/');

  dsm($files);

  $ops = [];
  for($i = 0; $i < 3;$i++){
    $ops[] = [
      'usgs_add_news_node_json',
      [
        array_pop($files)
      ],
    ];
  }

  $batch = [
    'operations' => $ops,
    'title' => 'Creating Nodes',
    'init_message' => 'Begin Creation',
    'progress_message' => 'Created @current of @total',
    'error_message' => 'Uh Oh. A fire broke out and burned it all down.',
    'file' => drupal_get_path('module', 'usgs_one_time_run') . '/usgs_one_time_run.module',
  ];

  batch_set($batch);
}

function usgs_add_news_node_json($file){
  $node = json_decode(file_get_contents($file->uri),TRUE);
  dsm($node);

  $newnode = new stdClass();
  $newnode->type = 'usgs_node';
  $newnode->language = LANGUAGE_NONE;
  $newnode->title = $node['title'];
  $newnode->uid = 1;
  $newnode->status = 1;
  $newnode->comment = 0;
  $newnode->promote = 0;
  $newnode->sticky = 0;
  $newnode->body = $node['body'];
  $newnode->body['und'][0]['format'] = 'full_html';

  $newnode = node_submit($newnode);
  node_save($newnode);

}

function usgs_strip_node_tags_form(){
  $form['submit'] = [
    '#type' => 'submit',
    '#value' => 'Lets Do This',
  ];

  return $form;
}

function usgs_strip_node_tags_form_submit($form, &$form_state){
  set_time_limit(0);

  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'usgs_node')
    ->execute();

  $nodes = empty($result) ? [] : array_keys($result['node']);

  dsm($nodes);
  $ops = [];

  foreach($nodes as $node){
    $ops[] = [
      'usgs_strip_node_tags',
      [
        $node,
      ],
    ];
  }

  $batch = [
    'operations' => $ops,
    'title' => 'Strippign Nodes',
    'init_message' => 'Begin Stripping',
    'progress_message' => 'Stripped @current of @total',
    'error_message' => 'Uh Oh. A fire broke out and burned it all down.',
    'file' => drupal_get_path('module', 'usgs_one_time_run') . '/usgs_one_time_run.module',
  ];

  batch_set($batch);
}

function usgs_strip_node_tags($nid){
  $node = node_load($nid);

  if(!empty($node->body)){
    $node->body['und'][0]['value'] = preg_replace("/\s+/"," ",drupal_html_to_text($node->body['und'][0]['value']));
    $node->body['und'][0]['format'] = 'plain_text';
    node_save($node);
  }
}

function import_hubpage_to_usgsnode(){
  set_time_limit(0);

  $data = json_decode(file_get_contents(drupal_get_path('module','usgs_one_time_run') . '/json/hubpages'));

  dsm($data);

  foreach($data as $datum){

  }

  $test = node_load_multiple([4855,4856]);

  dsm($test);

  import_hubpagenode_to_usgsnode($data,NULL);

  return "";
}

function import_hubpagenode_to_usgsnode(&$nodeArr,$parentNID){
  foreach($nodeArr as $key => $datum){
    $node = new stdClass();
    $node->title = $datum->title;
    $node->type = 'usgs_node';
    $node->language = LANGUAGE_NONE;
    node_object_prepare($node);
    $node->uid = 1;
    $node->status = 1;
    $node->promote = 0;
    $node->comment = 0;
    $node->body[$node->language][0] = empty($datum->body) ? NULL : (array)($datum->body->und[0]);
    $node->field_external_link[$node->language][0] = empty($datum->links_to) ? NULL : (array)($datum->links_to->und[0]);
    $node->field_image[$node->language][0] = empty($datum->field_images) ? NULL : (array)($datum->field_images->und[0]);
    $node->group_group[$node->language][0]['value'] = 1;
    if(!is_null($parentNID))
      $node->og_group_ref[$node->language][]['target_id'] = $parentNID;
    $node = node_submit($node);
    dsm($node);
    node_save($node);
    if(!empty($datum->alias_url)){
      $path = ['source' => 'node/' . $node->nid, 'alias' => $datum->alias_url];
      path_save($path);
    }
    unset($nodeArr->$key);
    if(!empty($datum->children))
      import_hubpagenode_to_usgsnode($datum->children,$node->nid);
  }
}

function import_dt_to_usgsnode(){
  set_time_limit(0);

  $data = json_decode(file_get_contents(drupal_get_path('module','usgs_one_time_run') . '/json/data_and_tools'));

  dsm($data);

  $vocab = taxonomy_vocabulary_machine_name_load('usgs_tags');

  $terms = taxonomy_get_tree($vocab->vid,0,1,TRUE);

  $term = NULL;

  $missionAreaTerm = $topicTerm = NULL;

  foreach($terms as $t){
    if($t->name == 'Products')
      $term = $t;

    if($t->name == 'Mission Areas')
      $missionAreaTerm = $t;

    if($t->name == 'Topic')
      $topicTerm = $t;
  }

  $term2 = NULL;
  if(!empty($term)){
    $terms = taxonomy_get_tree($vocab->vid,$term->tid,1,TRUE);

    foreach($terms as $t){
      if($t->name == 'Data and Tools'){
        $term2 = $t;
        break;
      }
    }

  }

  dsm($missionAreaTerm);
  dsm($topicTerm);

  dsm($term2);

  $terms = taxonomy_get_tree($vocab->vid,0,NULL,TRUE);

  dsm($terms);

  foreach($terms as $k => $t)
    $terms[$k] = (array)$t;


  $terms = array_column($terms,'name','tid');

  dsm($terms);

  foreach($data as $key => $datum) {
    $node = new stdClass();
    $node->title = $datum->title;
    $node->type = 'usgs_node';
    $node->language = LANGUAGE_NONE;
    node_object_prepare($node);
    $node->uid = 1;
    $node->status = 1;
    $node->promote = 0;
    $node->comment = 0;
    $node->body[$node->language][0] = empty($datum->body) ? NULL : (array)($datum->body->und[0]);
    $node->field_external_link[$node->language][0] = empty($datum->links_to) ? NULL : (array)($datum->links_to->und[0]);
    $node->field_image[$node->language][0] = empty($datum->field_images) ? NULL : (array)($datum->field_images->und[0]);
    $node->field_usgs_tags[$node->language][]['tid'] = empty($term2->tid) ? NULL : $term2->tid;

    $arr = ['mission_areas', 'topic', 'regions'];
    foreach ($terms as $k => $t) {
      foreach ($arr as $a) {
        if (is_array($datum->$a)) {
          if (in_array($t, $datum->$a)){
            $node->field_usgs_tags[$node->language][]['tid'] = $k;
          }
        }
      }
    }
    $node = node_submit($node);
    dsm($node);
    node_save($node);
    unset($data[$key]);


  }

  return "";
}

function import_science_to_usgsnode(){

  set_time_limit(0);

  $data = json_decode(file_get_contents(drupal_get_path('module','usgs_one_time_run') . '/json/science'));

  $vocab = taxonomy_vocabulary_machine_name_load('usgs_tags');

  $terms = taxonomy_get_tree($vocab->vid,0,1,TRUE);

  $term = NULL;

  $missionAreaTerm = $topicTerm = NULL;

  foreach($terms as $t){
    if($t->name == 'Products')
      $term = $t;

    if($t->name == 'Mission Areas')
      $missionAreaTerm = $t;

    if($t->name == 'Topic')
      $topicTerm = $t;
  }

  $term2 = NULL;
  if(!empty($term)){
    $terms = taxonomy_get_tree($vocab->vid,$term->tid,1,TRUE);

    foreach($terms as $t){
      if($t->name == 'Science'){
        $term2 = $t;
        break;
      }
    }

  }

  $terms = taxonomy_get_tree($vocab->vid,0,NULL,TRUE);


  foreach($terms as $k => $t)
    $terms[$k] = (array)$t;


  $terms = array_column($terms,'name','tid');

  foreach($data as $key => $datum) {
    $node = new stdClass();
    $node->title = $datum->title;
    $node->type = 'usgs_node';
    $node->language = LANGUAGE_NONE;
    node_object_prepare($node);
    $node->uid = 1;
    $node->status = 1;
    $node->promote = 0;
    $node->comment = 0;
    $node->body[$node->language][0] = empty($datum->body) ? NULL : (array)($datum->body->und[0]);
    $node->field_external_link[$node->language][0] = empty($datum->links_to) ? NULL : (array)($datum->links_to->und[0]);
    $node->field_image[$node->language][0] = empty($datum->field_images) ? NULL : (array)($datum->field_images->und[0]);
    $node->field_usgs_tags[$node->language][]['tid'] = empty($term2->tid) ? NULL : $term2->tid;

    $arr = ['mission_areas', 'topic', 'regions'];
    foreach ($terms as $k => $t) {
      foreach ($arr as $a) {
        if (is_array($datum->$a)) {
          //dsm("BEFORE MATCH: " . $t);
          if (in_array($t, $datum->$a)){
            $node->field_usgs_tags[$node->language][]['tid'] = $k;
          }
        }
      }
    }
    $node = node_submit($node);

    //dsm($node);
    node_save($node);
    //dsm($node);
    unset($data[$key]);

  }


  return "";
}

function import_maps_to_usgsnode(){
  set_time_limit(0);
  $data = json_decode(file_get_contents(drupal_get_path('module','usgs_one_time_run') . '/json/maps'));

  dsm($data);

  $vocab = taxonomy_vocabulary_machine_name_load('usgs_tags');

  $terms = taxonomy_get_tree($vocab->vid,0,1,TRUE);

  $term = NULL;

  $missionAreaTerm = $topicTerm = NULL;

  foreach($terms as $t){
    if($t->name == 'Products')
      $term = $t;

    if($t->name == 'Mission Areas')
      $missionAreaTerm = $t;

    if($t->name == 'Topic')
      $topicTerm = $t;
  }

  $term2 = NULL;
  if(!empty($term)){
    $terms = taxonomy_get_tree($vocab->vid,$term->tid,1,TRUE);

    foreach($terms as $t){
      if($t->name == 'Maps'){
        $term2 = $t;
        break;
      }
    }

  }

  dsm($term2);

  $terms = taxonomy_get_tree($vocab->vid,0,NULL,TRUE);

  dsm($terms);

  foreach($terms as $k => $t)
    $terms[$k] = (array)$t;


  $terms = array_column($terms,'name','tid');

  dsm($terms);

  foreach($data as $key => $datum) {
    $node = new stdClass();
    $node->title = $datum->title;
    $node->type = 'usgs_node';
    $node->language = LANGUAGE_NONE;
    node_object_prepare($node);
    $node->uid = 1;
    $node->status = 1;
    $node->promote = 0;
    $node->comment = 0;
    $node->body[$node->language][0] = empty($datum->body) ? NULL : (array)($datum->body->und[0]);
    $node->field_external_link[$node->language][0] = empty($datum->links_to) ? NULL : (array)($datum->links_to->und[0]);
    $node->field_image[$node->language][0] = empty($datum->field_images) ? NULL : (array)($datum->field_images->und[0]);
    $node->field_usgs_tags[$node->language][]['tid'] = empty($term2->tid) ? NULL : $term2->tid;

    $arr = ['mission_areas', 'topic', 'regions'];
    foreach ($terms as $k => $t) {
      foreach ($arr as $a) {
        if (is_array($datum->$a)) {
          if (in_array($t, $datum->$a)){
            $node->field_usgs_tags[$node->language][]['tid'] = $k;
          }
        }
      }
    }
    $node = node_submit($node);
    dsm($node);
    node_save($node);
    unset($data[$key]);


  }
  return "";
}

function import_software_to_usgsnode(){
  $data = json_decode(file_get_contents(drupal_get_path('module','usgs_one_time_run') . '/json/software'));

  dsm($data);

  $vocab = taxonomy_vocabulary_machine_name_load('usgs_tags');

  $terms = taxonomy_get_tree($vocab->vid,0,1,TRUE);

  $term = NULL;

  $missionAreaTerm = $topicTerm = NULL;

  foreach($terms as $t){
    if($t->name == 'Products')
      $term = $t;

    if($t->name == 'Mission Areas')
      $missionAreaTerm = $t;

    if($t->name == 'Topic')
      $topicTerm = $t;
  }

  $term2 = NULL;
  if(!empty($term)){
    $terms = taxonomy_get_tree($vocab->vid,$term->tid,1,TRUE);

    foreach($terms as $t){
      if($t->name == 'Software'){
        $term2 = $t;
        break;
      }
    }

  }

  dsm($term2);

  $terms = taxonomy_get_tree($vocab->vid,0,NULL,TRUE);

  dsm($terms);

  foreach($terms as $k => $t)
    $terms[$k] = (array)$t;


  $terms = array_column($terms,'name','tid');

  dsm($terms);

  foreach($data as $key => $datum) {
    $node = new stdClass();
    $node->title = $datum->title;
    $node->type = 'usgs_node';
    $node->language = LANGUAGE_NONE;
    node_object_prepare($node);
    $node->uid = 1;
    $node->status = 1;
    $node->promote = 0;
    $node->comment = 0;
    $node->body[$node->language][0] = empty($datum->body) ? NULL : (array)($datum->body->und[0]);
    $node->field_external_link[$node->language][0] = empty($datum->links_to) ? NULL : (array)($datum->links_to->und[0]);
    $node->field_image[$node->language][0] = empty($datum->field_images) ? NULL : (array)($datum->field_images->und[0]);
    $node->field_usgs_tags[$node->language][]['tid'] = empty($term2->tid) ? NULL : $term2->tid;

    $arr = ['mission_areas', 'topic', 'regions'];
    foreach ($terms as $k => $t) {
      foreach ($arr as $a) {
        if (is_array($datum->$a)) {
          if (in_array($t, $datum->$a)){
            $node->field_usgs_tags[$node->language][]['tid'] = $k;
          }
        }
      }
    }
    $node = node_submit($node);
    dsm($node);
    node_save($node);
    unset($data[$key]);


  }

  return "";
}

function convert_hubpage_to_usgsnode(){

  set_time_limit(0);

  $nodes = node_load_multiple([],['type' => 'hub_page']);

  dsm($nodes);

  $processed_nodes = [];

  $json = [];

  foreach($nodes as $nid => $node){
    if(!in_array($nid,$processed_nodes)){
      $top_node = phu_get_top_level_node($node);
      process_hubpage_node($top_node,$processed_nodes,$json);
    }
  }

  //dsm($processed_nodes);

  $jsonfile = drupal_get_path('module', 'usgs_one_time_run') . "/json/hubpages";

  dsm($jsonfile);

  file_put_contents($jsonfile, json_encode($json));

  return "";
}

function process_hubpage_node($node, &$processed_nodes, &$json){
  if(!in_array($node,$processed_nodes)){

    $children = phu_get_group_members($node);

    //dsm($children);

    $node = (array)$node;

    $node['links_to'] = $node['field_data_management_link'];

    $new_node = [];

    $fields = ['title', 'status', 'comment', 'promote', 'sticky', 'body', 'field_images', 'links_to'];


    foreach($fields as $field){
      $new_node[$field] = $node[$field];
    }

    $new_node['uid'] = 1;
    $new_node['field_top_level_page']['und'][0]['value'] = 1;
    $new_node['type'] = 'usgs_node';
    $new_node['alias_url'] = drupal_get_path_alias("node/" . $node['nid']);

    $json[$node['nid']] = $new_node;

    $processed_nodes[$node['nid']] = $node['nid'];

    foreach($children as $child){
      process_hubpage_node($child,$processed_nodes, $json[$node['nid']]['children']);
    }

  }
}


function convert_maps_to_usgsnode(){
  $nodes = node_load_multiple([],['type' => 'maps']);
  //$nodes = array_merge(array_merge('node_load'))

  dsm($nodes);

  $climate = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('climate_and_land_use_change')->vid,0,NULL,TRUE);
  $css = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('core_science_systems')->vid,0,NULL,TRUE);
  $ecosystems = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('ecosystems')->vid,0,NULL,TRUE);
  $enm = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('energy_and_minerals')->vid,0,NULL,TRUE);
  $eh = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('environmental_health')->vid,0,NULL,TRUE);
  $nh = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('natural_hazards')->vid,0,NULL,TRUE);
  $water = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('water')->vid,0,NULL,TRUE);



  dsm($climate);
  dsm($css);
  dsm($ecosystems);
  dsm($enm);
  dsm($eh);
  dsm($nh);
  dsm($water);

  $json = [];

  foreach($nodes as $nid => $node){

    $node = (array)$node;

    $node['links_to'] = $node['field_links_to'];

    $node['field_images'] = $node['field_image_media_browser_'];

    $new_node = [];

    $fields = ['title', 'status', 'comment', 'promote', 'sticky', 'body', 'field_images', 'links_to'];

    foreach($fields as $field){
      $new_node[$field] = $node[$field];
    }

    if(!empty($node['field_climate_and_land_use_chang']['und'])) {
      foreach ($node['field_climate_and_land_use_chang']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = trim(preg_replace("/\(.*\)/", "", $term->name));
      }
    }

    if(!empty($node['field_core_science_systems']['und'])){
      foreach ($node['field_core_science_systems']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_ecosystems']['und'])){
      foreach ($node['field_ecosystems']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_energy_and_minerals']['und'])){
      foreach ($node['field_energy_and_minerals']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    // Appears to be no data for this one
    if(!empty($node['field_environmental_health']['und'])){

      foreach ($node['field_environmental_health']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_natural_hazards']['und'])){

      foreach ($node['field_natural_hazards']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_water']['und'])){

      // dsm($node['field_water']['und']);
      foreach ($node['field_water']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }


    if(!empty($node['field_topic'])){
      // dsm($node['field_topic']);
      foreach ($node['field_topic']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['topic'][] = $term->name;
      }
      //dsm($new_node);
    }

    $regions = ['regions','northeast','northwest','southeast','southwest','midwest','pacific','alaska'];

    foreach($regions as $region){
      if(!empty($node['field_' . $region])){
        // dsm($node['field_' . $region]);
        foreach ($node['field_' . $region]['und'] as $ogp) {

          $term = taxonomy_term_load($ogp['tid']);

          $new_node['regions'][] = $term->name;
        }
        // dsm($new_node);
      }
    }

    $new_node['uid'] = 1;
    $new_node['field_top_level_page']['und'][0]['value'] = 0;
    $new_node['type'] = 'usgs_node';

    $new_node['alias_url'] = drupal_get_path_alias("node/" . $node['nid']);

    $json[] = $new_node;
  }

  $jsonfile = drupal_get_path('module', 'usgs_one_time_run') . "/json/maps";

  dsm($jsonfile);

  file_put_contents($jsonfile, json_encode($json));

  return "";

}

function convert_science_to_usgsnode(){
  $nodes = node_load_multiple([],['type' => 'science']);
  //$nodes = array_merge(array_merge('node_load'))

  dsm($nodes);

  $climate = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('climate_and_land_use_change')->vid,0,NULL,TRUE);
  $css = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('core_science_systems')->vid,0,NULL,TRUE);
  $ecosystems = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('ecosystems')->vid,0,NULL,TRUE);
  $enm = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('energy_and_minerals')->vid,0,NULL,TRUE);
  $eh = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('environmental_health')->vid,0,NULL,TRUE);
  $nh = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('natural_hazards')->vid,0,NULL,TRUE);
  $water = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('water')->vid,0,NULL,TRUE);



  dsm($climate);
  dsm($css);
  dsm($ecosystems);
  dsm($enm);
  dsm($eh);
  dsm($nh);
  dsm($water);

  $json = [];

  foreach($nodes as $nid => $node){

    $node = (array)$node;

    $node['links_to'] = $node['field_links_to'];

    $node['field_images'] = $node['field_image_media_browser_'];

    $new_node = [];

    $fields = ['title', 'status', 'comment', 'promote', 'sticky', 'body', 'field_images', 'links_to'];

    foreach($fields as $field){
      $new_node[$field] = $node[$field];
    }

    if(!empty($node['field_climate_and_land_use_chang']['und'])) {
      foreach ($node['field_climate_and_land_use_chang']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = trim(preg_replace("/\(.*\)/", "", $term->name));
      }
    }

    if(!empty($node['field_core_science_systems']['und'])){
      foreach ($node['field_core_science_systems']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_ecosystems']['und'])){
      foreach ($node['field_ecosystems']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_energy_and_minerals']['und'])){
      foreach ($node['field_energy_and_minerals']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    // Appears to be no data for this one
    if(!empty($node['field_environmental_health']['und'])){

      foreach ($node['field_environmental_health']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_natural_hazards']['und'])){

      foreach ($node['field_natural_hazards']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_water']['und'])){

      // dsm($node['field_water']['und']);
      foreach ($node['field_water']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }


    if(!empty($node['field_topic'])){
      // dsm($node['field_topic']);
      foreach ($node['field_topic']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['topic'][] = $term->name;
      }
      //dsm($new_node);
    }

    $regions = ['regions','northeast','northwest','southeast','southwest','midwest','pacific','alaska'];

    foreach($regions as $region){
      if(!empty($node['field_' . $region])){
        // dsm($node['field_' . $region]);
        foreach ($node['field_' . $region]['und'] as $ogp) {

          $term = taxonomy_term_load($ogp['tid']);

          $new_node['regions'][] = $term->name;
        }
        // dsm($new_node);
      }
    }

    $new_node['uid'] = 1;
    $new_node['field_top_level_page']['und'][0]['value'] = 0;
    $new_node['type'] = 'usgs_node';

    $new_node['alias_url'] = drupal_get_path_alias("node/" . $node['nid']);

    $json[] = $new_node;
  }

  $jsonfile = drupal_get_path('module', 'usgs_one_time_run') . "/json/science";

  dsm($jsonfile);

  file_put_contents($jsonfile, json_encode($json));

  return "";

}

function convert_dt_to_usgsnode(){
  $nodes = node_load_multiple([],['type' => 'data_and_tools']);
  //$nodes = array_merge(array_merge('node_load'))

  dsm($nodes);

  $climate = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('climate_and_land_use_change')->vid,0,NULL,TRUE);
  $css = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('core_science_systems')->vid,0,NULL,TRUE);
  $ecosystems = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('ecosystems')->vid,0,NULL,TRUE);
  $enm = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('energy_and_minerals')->vid,0,NULL,TRUE);
  $eh = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('environmental_health')->vid,0,NULL,TRUE);
  $nh = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('natural_hazards')->vid,0,NULL,TRUE);
  $water = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('water')->vid,0,NULL,TRUE);



  dsm($climate);
  dsm($css);
  dsm($ecosystems);
  dsm($enm);
  dsm($eh);
  dsm($nh);
  dsm($water);

  $json = [];

  foreach($nodes as $nid => $node){

    $node = (array)$node;

    $node['links_to'] = $node['field_links_to'];

    $node['field_images'] = $node['field_image_media_browser_'];

    $new_node = [];

    $fields = ['title', 'status', 'comment', 'promote', 'sticky', 'body', 'field_images', 'links_to'];

    foreach($fields as $field){
      $new_node[$field] = $node[$field];
    }

    if(!empty($node['field_climate_and_land_use_chang']['und'])) {
      foreach ($node['field_climate_and_land_use_chang']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = trim(preg_replace("/\(.*\)/", "", $term->name));
      }
    }

    if(!empty($node['field_core_science_systems']['und'])){
      foreach ($node['field_core_science_systems']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_ecosystems']['und'])){
      foreach ($node['field_ecosystems']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_energy_and_minerals']['und'])){
      foreach ($node['field_energy_and_minerals']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    // Appears to be no data for this one
    if(!empty($node['field_environmental_health']['und'])){

      foreach ($node['field_environmental_health']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_natural_hazards']['und'])){

      foreach ($node['field_natural_hazards']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_water']['und'])){

      // dsm($node['field_water']['und']);
      foreach ($node['field_water']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }


    if(!empty($node['field_topic'])){
      // dsm($node['field_topic']);
      foreach ($node['field_topic']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['topic'][] = $term->name;
      }
      //dsm($new_node);
    }

    $regions = ['regions','northeast','northwest','southeast','southwest','midwest','pacific','alaska'];

    foreach($regions as $region){
      if(!empty($node['field_' . $region])){
        // dsm($node['field_' . $region]);
        foreach ($node['field_' . $region]['und'] as $ogp) {

          $term = taxonomy_term_load($ogp['tid']);

          $new_node['regions'][] = $term->name;
        }
        // dsm($new_node);
      }
    }

    if(!empty($node['field_data_and_tools'])){
      foreach ($node['field_data_and_tools']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['data_and_tools'][] = $term->name;
      }
    }

    if(!empty($node['field_real_time_science_topics'])){
      foreach ($node['field_real_time_science_topics']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['field_real_time_science_topics'][] = $term->name;
      }
    }

    $new_node['uid'] = 1;
    $new_node['field_top_level_page']['und'][0]['value'] = 0;
    $new_node['type'] = 'usgs_node';

    $new_node['alias_url'] = drupal_get_path_alias("node/" . $node['nid']);

    $json[] = $new_node;
  }

  $jsonfile = drupal_get_path('module', 'usgs_one_time_run') . "/json/data_and_tools";

  dsm($jsonfile);

  file_put_contents($jsonfile, json_encode($json));

  return "";

}

function convert_software_to_usgsnode(){
  $nodes = node_load_multiple([],['type' => 'software']);
  //$nodes = array_merge(array_merge('node_load'))

  dsm($nodes);

  $climate = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('climate_and_land_use_change')->vid,0,NULL,TRUE);
  $css = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('core_science_systems')->vid,0,NULL,TRUE);
  $ecosystems = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('ecosystems')->vid,0,NULL,TRUE);
  $enm = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('energy_and_minerals')->vid,0,NULL,TRUE);
  $eh = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('environmental_health')->vid,0,NULL,TRUE);
  $nh = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('natural_hazards')->vid,0,NULL,TRUE);
  $water = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('water')->vid,0,NULL,TRUE);



  dsm($climate);
  dsm($css);
  dsm($ecosystems);
  dsm($enm);
  dsm($eh);
  dsm($nh);
  dsm($water);

  $json = [];

  foreach($nodes as $nid => $node){

    $node = (array)$node;

    $node['links_to'] = $node['field_links_to'];

    $node['field_images'] = $node['field_image'];

    $new_node = [];

    $fields = ['title', 'status', 'comment', 'promote', 'sticky', 'body', 'field_images', 'links_to'];

    foreach($fields as $field){
      $new_node[$field] = $node[$field];
    }

    if(!empty($node['field_climate_and_land_use_chang']['und'])) {
      foreach ($node['field_climate_and_land_use_chang']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = trim(preg_replace("/\(.*\)/", "", $term->name));
      }
    }

    if(!empty($node['field_core_science_systems']['und'])){
      foreach ($node['field_core_science_systems']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_ecosystems']['und'])){
      foreach ($node['field_ecosystems']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_energy_and_minerals']['und'])){
      foreach ($node['field_energy_and_minerals']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    // Appears to be no data for this one
    if(!empty($node['field_environmental_health']['und'])){

      foreach ($node['field_environmental_health']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_natural_hazards']['und'])){

      foreach ($node['field_natural_hazards']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }

    if(!empty($node['field_water']['und'])){

      // dsm($node['field_water']['und']);
      foreach ($node['field_water']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mission_areas'][] = $term->name;
      }
    }


    if(!empty($node['field_topic'])){
      // dsm($node['field_topic']);
      foreach ($node['field_topic']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['topic'][] = $term->name;
      }
      //dsm($new_node);
    }

    if(!empty($node['field_software_topics'])){
      dsm($node['field_software_topics']);

    }

    $regions = ['regions','northeast','northwest','southeast','southwest','midwest','pacific','alaska'];

    foreach($regions as $region){
      if(!empty($node['field_' . $region])){
        // dsm($node['field_' . $region]);
        foreach ($node['field_' . $region]['und'] as $ogp) {

          $term = taxonomy_term_load($ogp['tid']);

          $new_node['regions'][] = $term->name;
        }
        // dsm($new_node);
      }
    }

    $new_node['uid'] = 1;
    $new_node['field_top_level_page']['und'][0]['value'] = 0;
    $new_node['type'] = 'usgs_node';

    $new_node['alias_url'] = drupal_get_path_alias("node/" . $node['nid']);

    $json[] = $new_node;
  }

  $jsonfile = drupal_get_path('module', 'usgs_one_time_run') . "/json/software";

  dsm($jsonfile);

  file_put_contents($jsonfile, json_encode($json));

  return "";

}

function convert_news_to_usgsnode(){

  set_time_limit(0);

  /**
   * EXPORT CONTACTS
   */

  /*

  $contactVocab = taxonomy_vocabulary_machine_name_load('contacts');
  $contacts = taxonomy_get_tree($contactVocab->vid,0,NULL,TRUE);
  //dsm($contacts);
  $contactsJson = [];

  foreach($contacts as $contact){

    if($contact->name == 'phu blue test dude')
      dsm($contact);




    $new_node = [
      'tid' => $contact->tid,
      'name' => $contact->name,
      'email' => $contact->field_news_contact_e_mail['und'][0]['value'],
      'phone' => $contact->field_news_contact_phone['und'][0]['value'],
      'phone_ext' => $contact->field_news_contact_phone_ext['und'][0]['value'],
      'title' => $contact->field_news_contact_phone_ext['und'][0]['value'],
      'active' => $contact->field_news_contact_is_active['und']['0']['value'],
    ];

    if(!empty($contact->field_news_contact_fax['und']))
      $new_node['fax'] = array_column($contact->field_news_contact_fax['und'],'value');


    $contact = (array)$contact;
    if(!empty($contact['field_state']['und'])){

      foreach ($contact['field_state']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['regions'][] = $term->name;
      }
    }

    if(!empty($contact['field_topic']['und'])){
      foreach ($contact['field_topic']['und'] as $ogp) {

        $term = taxonomy_term_load($ogp['tid']);

        $new_node['topic'][] = $term->name;
      }
    }

    $contactsJson[$contact['tid']] = $new_node;
  }

  $jsonfile = drupal_get_path('module', 'usgs_one_time_run') . "/json/contacts";

  //dsm($jsonfile);

  file_put_contents($jsonfile, json_encode($contactsJson));

  */

  /**
   * END OF CONTACT EXPORT
   */

  /**
   * EXPORT COUNTRIES
   */

  /*

  $countryVocab = taxonomy_vocabulary_machine_name_load('countries');
  $countries = taxonomy_get_tree($countryVocab->vid,0,NULL,TRUE);

  dsm($countries);

  $countriesJson = [];

  foreach($countries as $country){
    $countriesJson[$country->tid] = $country->name;
  }

  $jsonfile = drupal_get_path('module', 'usgs_one_time_run') . "/json/countries";

  //dsm($jsonfile);

  file_put_contents($jsonfile, json_encode($countriesJson));

  */

  /**
   * END OF COUNTRY EXPORT
   */



  /**
   * EXPORT NEWS ARTICLES
   */




  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->propertyCondition('status', 1)
    ->propertyCondition('type', array('news_article'))
    ->propertyOrderBy('created', 'DESC');
  $result = $query->execute();
  dsm($result);

  $news = [];

  foreach ($result['node'] as $node) {
    $news[] = $node->nid;
  }



  //$newsJson = [];

  //$news = node_load_multiple($news);

  //$news = node_load_multiple([],['type' => 'news_article']);

  //dsm($news);

  $count = 0;
  foreach ($result['node'] as $node) {
    $new_node = [];

    // $new is the node object;
    $new = (array) node_load($node->nid);

    $fields = ['title', 'status', 'comment', 'promote', 'sticky', 'body', 'field_images'];

    foreach ($fields as $field) {
      $new_node[$field] = $new[$field];
    }

    $regions = ['northeast', 'northwest', 'southeast', 'southwest', 'midwest', 'pacific', 'alaska'];

    foreach ($regions as $region) {
      if (!empty($new['field_' . $region])) {
        // dsm($node['field_' . $region]);
        foreach ($new['field_' . $region]['und'] as $ogp) {

          $term = taxonomy_term_load($ogp['tid']);

          $new_node['regions'][] = $term->name;
        }
        // dsm($new_node);
      }
    }

    $mission_areas = ['water', 'climate_and_land_user_chang', 'core_science_systems', 'ecosystems',
      'energy_and_minerals', 'environmental_health', 'natural_hazards', 'science_support'
    ];

    foreach ($mission_areas as $mission_area) {
      if (!empty($new['field_' . $mission_area])) {
        // dsm($node['field_' . $region]);
        foreach ($new['field_' . $mission_area]['und'] as $ogp) {

          $term = taxonomy_term_load($ogp['tid']);

          $new_node['mission_areas'][$term->tid] = ['name' => $term->name, 'tid' => $term->tid];
        }
        // dsm($new_node);
      }
    }
    if (!empty($new['field_news_article_country'])) {
      foreach ($new['field_news_article_country']['und'] as $ogp) {
        $term = taxonomy_term_load($ogp['tid']);

        $new_node['country'][] = $term->name;
      }
    }
    if (!empty($new['field_tags'])) {
      foreach ($new['field_tags']['und'] as $ogp) {
        $term = taxonomy_term_load($ogp['tid']);

        $new_node['free_tags'][] = $term->name;
      }
    }
    if (!empty($new['field_mm_tags'])) {
      foreach ($new['field_mm_tags']['und'] as $ogp) {
        $term = taxonomy_term_load($ogp['tid']);

        $new_node['mm_tags'][] = $term->name;
      }
    }
    if (!empty($new['field_topics'])) {
      foreach ($new['field_topics']['und'] as $ogp) {
        $term = taxonomy_term_load($ogp['tid']);

        $new_node['topic'][] = $term->name;
      }
    }
    if (!empty($new['field_news_article_type'])) {
      foreach ($new['field_news_article_type']['und'] as $ogp) {
        $term = taxonomy_term_load($ogp['tid']);

        $new_node['article_type'][] = $term->name;
      }
    }
    if (!empty($new['field_news_article_distro_list'])) {
      foreach ($new['field_news_article_distro_list']['und'] as $ogp) {
        $term = taxonomy_term_load($ogp['tid']);

        $new_node['distribution'][] = $term->name;
      }
    }

    $new_node['release_date'] = $new['field_news_article_release_date'];
    $new_node['contacts'] = $new['field_news_article_contacts'];
    $new_node['subtitle'] = $new['field_news_article_subtitle'];

    //dsm($new);
    //dsm($new_node);

    $count++;
    $jsonfile = drupal_get_path('module', 'usgs_one_time_run') . "/json/news-articles/node-$node->nid.json";

    //dsm($jsonfile);

    file_put_contents($jsonfile, json_encode($new_node));

    //if($count > 5) {break;}
  }







  return "";
}


/**
 * Helper function used by usgs plugins. Given a node object, determine what the top parent is.
 * This function checks the value of the 'field_top_level_page' to determine which node to return
 *
 * @param unknown $node
 * @return stdClass
 */
function phu_get_top_level_node($node) {
  return (empty($node->og_group_ref)) ? $node : phu_get_top_level_node(node_load($node->og_group_ref['und'][0]['target_id']));
}

/**
 * Helper function that is used by the usgs plugins.
 *
 * @param unknown $node
 * @return boolean
 */
function phu_get_group_members($node) {
  $nid = $node->nid;
  $og_membership = array();
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'og_membership')
    ->propertyCondition('entity_type', 'node', '=')
    ->propertyCondition('gid', $nid, '=')
    //->propertyCondition('field_name', 'og_group_ref', '=')
    ->addMetaData('account', user_load(1)); // Run the query as user 1.
  //$result = $query->addTag('debug')->execute();
  $result = $query->execute();
  //dsm($result);

  if (!empty($result['og_membership'])) {
    $ids = array_keys($result['og_membership']);
    $og_membership = entity_load('og_membership', $ids);
  }
  $og_members = array();
  foreach($og_membership as $id => $member) {
    $entity = entity_load_single($member->entity_type, $member->etid);
    $og_members[$member->etid] = $entity;
  }
  return $og_members;
}

/**
 * Helper function that is used by the usgs plugins.
 *
 * @param unknown $node
 * @return boolean
 */
function phu_node_has_members($node) {
  $nid = $node->nid;
  $og_membership = array();
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'og_membership')
    ->propertyCondition('entity_type', 'node', '=')
    ->propertyCondition('gid', $nid, '=')
    ->propertyCondition('field_name', 'og_group_ref', '=')
    ->addMetaData('account', user_load(1)); // Run the query as user 1.
  //$result = $query->addTag('debug')->execute();
  $result = $query->execute();
  if (!empty($result['og_membership'])) {
    return TRUE;
  }
  return FALSE;
}

